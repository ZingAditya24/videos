{"version":3,"sources":["components/SearchBar.js","apis/Youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","params","part","maxResults","key","VideoItem","video","onVideoSelect","onClick","src","snippet","thumbnails","medium","url","alt","title","VideoList","videos","renderedList","map","id","videoId","VideoDetail","videoSrc","frameBorder","allow","allowFullScreen","description","App","selectedVideo","onTermSubmit","a","youtube","get","q","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"6NAgCeA,E,4MA5BXC,MAAQ,CAAEC,KAAO,I,EAEjBC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAAEH,KAAOE,EAAME,OAAOC,S,EAGxCC,aAAe,SAACJ,GACZA,EAAMK,iBAEN,EAAKC,MAAMF,aAAa,EAAKP,MAAMC,O,4CAIvC,WACI,OACI,qBAAKS,UAAU,wBAAf,SACI,sBAAMC,SAAUC,KAAKL,aAAcG,UAAU,UAA7C,SACI,sBAAKA,UAAU,QAAf,UACI,iDACA,uBAAOG,KAAK,OAAOP,MAAOM,KAAKZ,MAAMC,KAAMa,SAAUF,KAAKV,2B,GArB1Da,IAAMC,W,QCEfC,E,OAAAA,EAAMC,OAAO,CAExBC,QAAS,wCACTC,OAAS,CACLC,KAAO,UACPR,KAAM,QACNS,WAAY,EACZC,IATI,6CCaGC,G,MAZG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAQC,EAAmB,EAAnBA,cACzB,OAEA,sBAAKC,QAAS,kBAAMD,EAAcD,IAAQf,UAAU,kBAApD,UACI,qBAAKA,UAAU,WAAWkB,IAAKH,EAAMI,QAAQC,WAAWC,OAAOC,IAAKC,IAAKR,EAAMI,QAAQK,QACvF,qBAAKxB,UAAU,UAAf,SACI,qBAAKA,UAAU,SAAf,SAA0Be,EAAMI,QAAQK,eCOrCC,EAbG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQV,EAAoB,EAApBA,cAEnBW,EAAeD,EAAOE,KAAI,SAACb,GAC7B,OAAO,cAAC,EAAD,CAAkCC,cAAeA,EAAeD,MAAOA,GAAvDA,EAAMc,GAAGC,YAGpC,OACA,qBAAK9B,UAAU,0BAAf,SACK2B,KCYMI,EArBK,SAAC,GAAa,IAAZhB,EAAW,EAAXA,MAElB,IAAIA,EACA,OAAO,8CAGX,IAAMiB,EAAQ,wCAAoCjB,EAAMc,GAAGC,SAE3D,OACI,gCACI,qBAAK9B,UAAU,WAAf,SACI,wBAAQkB,IAAKc,EAAUR,MAAM,uBAAuBS,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,MAExL,sBAAKnC,UAAU,aAAf,UACI,qBAAIA,UAAU,YAAd,UAA2Be,EAAMI,QAAQK,MAAzC,OACA,4BAAIT,EAAMI,QAAQiB,qBC+BnBC,E,4MAxCX/C,MAAQ,CAAEoC,OAAS,GAAIY,cAAe,M,EAMtCC,a,uCAAe,WAAMhD,GAAN,eAAAiD,EAAA,sEACYC,EAAQC,IAAI,UAAW,CAC1ChC,OAAS,CACLiC,EAAIpD,KAHD,OACLqD,EADK,OAQX,EAAKlD,SAAS,CAAEgC,OAASkB,EAASC,KAAKC,MAAOR,cAAgBM,EAASC,KAAKC,MAAM,KARvE,2C,wDAWf9B,cAAgB,SAACD,GACb,EAAKrB,SAAS,CAAC4C,cAAcvB,K,uDAhBjC,WACIb,KAAKqC,aAAa,e,oBAkBtB,WACI,OACA,sBAAKvC,UAAU,eAAf,UACI,cAAC,EAAD,CAAWH,aAAcK,KAAKqC,eAC9B,qBAAKvC,UAAU,UAAf,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,cAAC,EAAD,CAAae,MAAOb,KAAKZ,MAAMgD,kBAEnC,qBAAKtC,UAAU,mBAAf,SACI,cAAC,EAAD,CAAWgB,cAAed,KAAKc,cAAeU,OAAQxB,KAAKZ,MAAMoC,uB,GAjCvErB,IAAMC,WCFxByC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.6cd6b116.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SearchBar extends React.Component{\r\n\r\n    state = { term : ''};\r\n\r\n    onInputChange = (event) =>{\r\n        this.setState({ term : event.target.value });\r\n    };\r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.props.onFormSubmit(this.state.term);\r\n\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"search-bar ui segment\">\r\n                <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n                    <div className=\"field\">\r\n                        <label>Video Search</label>\r\n                        <input type=\"text\" value={this.state.term} onChange={this.onInputChange} />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SearchBar;","import axios from 'axios';\r\n\r\nconst KEY = 'AIzaSyAaBsQOHgvegvPb8N5os_okxIVaktc7Rdw';\r\n\r\nexport default axios.create({\r\n\r\n    baseURL: 'https://www.googleapis.com/youtube/v3',\r\n    params : {\r\n        part : 'snippet',\r\n        type: 'video',\r\n        maxResults: 5,\r\n        key: KEY\r\n    }    \r\n\r\n});","import './VideoItem.css';\r\nimport React from 'react';\r\n\r\nconst VideoItem = ({ video , onVideoSelect}) => {\r\n    return (\r\n    \r\n    <div onClick={() => onVideoSelect(video)} className=\"video-item item\">\r\n        <img className=\"ui image\" src={video.snippet.thumbnails.medium.url} alt={video.snippet.title}/>\r\n        <div className=\"content\">\r\n            <div className=\"header\">{ video.snippet.title }</div>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n\r\n    const renderedList = videos.map((video) => {\r\n        return <VideoItem key={video.id.videoId} onVideoSelect={onVideoSelect} video={video}/>\r\n    });\r\n\r\n    return (\r\n    <div className=\"ui relaxed divided list\">\r\n        {renderedList}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default VideoList;","import React from 'react';\r\n\r\nconst VideoDetail = ({video}) => {\r\n\r\n    if(!video) {\r\n        return <div> Loading...</div>\r\n    }\r\n    \r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"ui embed\">\r\n                <iframe src={videoSrc} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen/>\r\n            </div>\r\n            <div className=\"ui segment\">\r\n                <h4 className=\"ui header\">{video.snippet.title} </h4>\r\n                <p>{video.snippet.description}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoDetail;","import React from 'react';\r\nimport SearchBar from './SearchBar'\r\nimport youtube from '../apis/Youtube' \r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\n\r\nclass App extends React.Component{\r\n\r\n    state = { videos : [], selectedVideo: null };\r\n\r\n    componentDidMount(){\r\n        this.onTermSubmit('buildings');\r\n    }\r\n\r\n    onTermSubmit = async term => {\r\n        const response = await youtube.get('/search', {\r\n            params : {\r\n                q : term\r\n            }\r\n        });\r\n\r\n        \r\n        this.setState({ videos : response.data.items, selectedVideo : response.data.items[0]});\r\n    };\r\n\r\n    onVideoSelect = (video) => {\r\n        this.setState({selectedVideo:video});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div className=\"ui container\">\r\n            <SearchBar onFormSubmit={this.onTermSubmit} />\r\n            <div className=\"ui grid\">\r\n                <div className=\"ui row\">\r\n                    <div className=\"eleven wide column\">\r\n                        <VideoDetail video={this.state.selectedVideo} />\r\n                    </div>\r\n                    <div className=\"five wide column\">\r\n                        <VideoList onVideoSelect={this.onVideoSelect} videos={this.state.videos} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}